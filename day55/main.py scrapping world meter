from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By
import pandas as pd
import time



options = Options()

options.add_experimental_option("detach", True)
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()),
                          options=options)
driver.get("https://www.worldometers.info/world-population/population-by-country/")
countries = driver.find_elements(By.XPATH, "//tbody/tr/td[2]/a")
population = driver.find_elements(By.XPATH, "//tbody/tr/td[3]")
yearly_change = driver.find_elements(By.XPATH, "//tbody/tr/td[4]")
net_change = driver.find_elements(By.XPATH, "//tbody/tr/td[5]")
density_pkm2 = driver.find_elements(By.XPATH, "//tbody/tr/td[6]")
land_area_km2 = driver.find_elements(By.XPATH, "//tbody/tr/td[7]")
migrant_net = driver.find_elements(By.XPATH, "//tbody/tr/td[8]")
fert_rate = driver.find_elements(By.XPATH, "//tbody/tr/td[9]")
med_age = driver.find_elements(By.XPATH, "//tbody/tr/td[10]")
urban_pop_per = driver.find_elements(By.XPATH, "//tbody/tr/td[11]")
world_share = driver.find_elements(By.XPATH, "//tbody/tr/td[12]")

population_result = []
for i in range(2, 235):
    temporary_data = {"country": countries[i].text,
                     "population": population[i].text,
                     "yearly_change": yearly_change[i].text,
                      "net_change": net_change[i].text,
                      "density_pkm2": density_pkm2[i].text,
                      "land_area_km2": land_area_km2[i].text,
                      "migrant_net": migrant_net[i].text,
                      "fert_rate": fert_rate[i].text,
                      "med_age": med_age[i].text,
                      "urban_pop_per": urban_pop_per[i].text,
                      "world_share": world_share[i].text}
    population_result.append(temporary_data)
df_data = pd.DataFrame(population_result)
df_data.to_excel("population_scrapping_result.xlsx", index=False)

